{"version":3,"file":"static/js/320.167afe0b.chunk.js","mappings":"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","sources":["components/authentication/DepartmentSignUp.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport background from \"../../assets.app/img/backgrounds/department.jpg\";\nimport { NumberFormat, axiosInstance } from '../../constants/utils';\nimport useToasty from '../../hooks/toasty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\nimport { userRoutes } from '../../constants/constant';\n\n\nconst DepartmentSignUp = () => {\n  const [isOtpSent, setIsOtpSent] = useState(false)\n  const [user, setUser] = useState({})\n  const phoneRef = useRef(null);\n  const otpRef = useRef(null);\n  const toasty = useToasty()\n\n  const sentOtp = async (phone) => {\n    try{\n      if(!phone) {\n        toasty.error('Enter phone number')\n        return\n      }\n\n      let { data } = await axiosInstance.post('/signup', { phone, source: 'department' })\n      setIsOtpSent(true)\n      setUser(data?.user)\n      toasty.success(data?.message)\n    } catch(error){ \n      console.error(error) \n      toasty.error(error?.message)\n    }\n  }\n\n  const handleSignup = async () => {\n    try{\n      let { data } = await axiosInstance.post('/validate-otp', { otp: otpRef.current.value, userId: user._id })\n\n      localStorage.setItem('user', JSON.stringify(data?.user))\n      localStorage.setItem('token', JSON.stringify(data?.token))\n\n      if (data?.user?.twoFactor?.isVerified) {\n        let route = userRoutes[data?.user?.userType]?.path\n        window.location.replace(route)\n      } else if( data?.user?.userType === 'DR' ) {\n        // window.location.replace('/after')\n      } \n      \n      toasty.success(data?.message)\n    } catch(error){ \n      console.error(error) \n      toasty.error(error?.message)\n    }\n  }\n\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${background})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n      }}\n      className=\"loginContainer align-center\"\n    >\n      <div className=\"w-25 m-auto hc-signup-container d-flex flex-column align-items-center\">\n        <span className=\" h4 hos-singup-heading p-1 text-light\"> Sign Up</span>\n        <span className=\"h2 text-light text-center  mb-3 hos-singup-heading\">\n          Hospital / Clinic\n        </span>\n        {!isOtpSent && <div className=\"w-100\">\n          <p className=\"mb-1 text-light\">Mobile Number</p>\n          <input\n            type=\"text\"\n            className=\"form-control letterSpcing\"\n            placeholder='8218692122'\n            onChange={NumberFormat}\n            ref={phoneRef}\n          />\n          <span className=\"text-center\">\n            <button className=\"btn btn1 btn-primary mt-3 shadow-none\" onClick={() => sentOtp(phoneRef.current.value)}>Sent OTP</button>\n          </span>\n        </div>}\n        {isOtpSent &&\n          <div className=\"mobile\">\n            <p className='mb-1 text-light'>Mobile Number</p>\n            <h3 className='text-light'>+91 {`${String(user?.phone || \"\").slice(0, 3)}-${String(user?.phone || \"\").slice(3, 6)}-${String(user?.phone || \"\").slice(6, 10)}`} <span><FontAwesomeIcon onClick={() => setIsOtpSent(false)} className='cursor-pointer medit ml-1 text' icon={faEdit} /></span></h3>\n          </div>\n        }\n        {isOtpSent && <div className=\"w-100 d-flex flex-column justify-content-start\">\n          <div className=\"otp w-75 mt-2 \">\n            <label htmlFor=\"\" className=\"text-light\">\n              Enter the OTP\n            </label>\n            <input\n              className=\"form-control mt-2 letterSpcing\"\n              type=\"text\"\n              name=\"OTP\"\n              placeholder=\"X X X X\"\n              maxLength={4}\n              ref={otpRef}\n            />\n            <button className=\"btn btn-primary btn1 mt-4\" onClick={handleSignup}>Sign Up</button>\n          </div>\n        </div>}\n      </div>\n    </div>\n  );\n}\n\nexport default DepartmentSignUp"],"names":["_useState","useState","_useState2","_slicedToArray","isOtpSent","setIsOtpSent","_useState3","_useState4","user","setUser","phoneRef","useRef","otpRef","toasty","useToasty","sentOtp","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","phone","_yield$axiosInstance$","data","wrap","_context","prev","next","error","abrupt","axiosInstance","source","sent","success","message","t0","console","stop","_x","apply","arguments","handleSignup","_ref2","_callee2","_data$user","_data$user$twoFactor","_data$user3","_yield$axiosInstance$2","_userRoutes$data$user","_data$user2","route","_context2","otp","current","value","userId","_id","localStorage","setItem","JSON","stringify","token","twoFactor","isVerified","userRoutes","userType","path","window","location","replace","_jsx","style","backgroundImage","concat","background","backgroundRepeat","backgroundSize","className","children","_jsxs","type","placeholder","onChange","NumberFormat","ref","onClick","String","slice","FontAwesomeIcon","icon","faEdit","htmlFor","name","maxLength"],"sourceRoot":""}