{"version":3,"file":"static/js/797.04849f39.chunk.js","mappings":"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","sources":["components/common-components/Dropdown.js","layout/Sidebar.js","layout/Header.js","layout/Index.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\"\r\n\r\n\r\nexport const Item = ({ children, ...rest }) => {\r\n    return(\r\n        <li class=\"dropdown-menu-header cursor-pointer dropdown-menu-active px-2 py-1\" {...rest} >\r\n            {children}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport const Dropdown = ({ toggle, children }) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const wrapperRef = useRef(null)\r\n\r\n    const handleOutside = (event) => {\r\n        if(!wrapperRef.current.contains(event.target)){\r\n            setIsOpen(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isOpen)  window.addEventListener('mousedown', handleOutside)\r\n        return() => window.removeEventListener('mousedown', handleOutside)\r\n    })\r\n    return(\r\n        <>  \r\n            <div className=\"dropdown\" onClick={() => setIsOpen(!isOpen)} ref={wrapperRef}>\r\n                {toggle}\r\n                <ul class={`dropdown-menu dropdown-menu-end user-dropdown pb-0 ${ isOpen && 'show' }`} aria-labelledby=\"userDropdown\" data-bs-popper=\"none\">\r\n                    {children}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Logo from '../assets.app/img/medboard-logo-216x62.png';\r\nimport Doctor from '../assets.app/img/dashboard/doctor-3.jpg';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { MODULES,userRoutes } from '../constants/constant';\r\n\r\nfunction Sidebar({isOpen, setIsOpen, mobileView}) {\r\n    const location = useLocation();\r\n    const pathname = location.pathname.split(\"/\")\r\n    const userInfo = JSON.parse(localStorage.getItem('user')) || \"\"\r\n    const [activeNav, setActiveNav] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setActiveNav(pathname[2])\r\n    }, [pathname, ])\r\n    \r\n\r\n    return (\r\n            <aside className={`side-nav fixed ms-aside-scrollable ms-aside ps ps--active-y ${ !isOpen ? 'ms-aside-left' : '' } `} style={{ paddingBottom: '6rem'}}>\r\n                {/* <!-- Logo --> */}\r\n                <div className=\"logo-sn ms-d-block-lg\">\r\n                    <a className=\"ps-0 ms-0 text-center\" href=\"index.html\"> <img src={Logo} alt=\"logo\" /> </a>\r\n                    <div className=\"d-flex flex-row justify-content-around align-items-baseline\">\r\n                        <div className=\"\">\r\n                            <a href=\"/\" className=\"text-center \"> <img className=\"profile-image\" src={Doctor} alt=\"logo\" /></a>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <h5 className=\"text-center text-white mt-2\">{ ['SA', 'MR', 'PT'].includes(userInfo.userType) ?  userInfo?.fullName : userInfo?.organizationId?.name }</h5>\r\n                            <h6 className=\"text-center text-white mb-3\">{userInfo?.userType !== 'DR' ? userRoutes[userInfo?.userType].title : userInfo?.organizationId?.organizationType?.toUpperCase() }</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n    \r\n                <ul className=\"accordion ms-main-aside fs-14 overflow-auto\">\r\n  \r\n                    {MODULES.filter((m) => m.access.includes(userInfo?.userType)).map( (module, key) => <li className={`menu-item ${activeNav === module.id && 'nav-link-active'}`} onClick={() => { mobileView && setIsOpen(!setIsOpen)}} key={key}>\r\n                        <Link to={`/${pathname[1]}${module.pathname}`} className=\"has-chevron\"  >\r\n                            <span>{module.title}</span>\r\n                        </Link>\r\n                    </li>)}\r\n                </ul>\r\n        </aside>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import { memo, useEffect, useState } from \"react\"\r\nimport Logo from '../assets.app/img/logo/logo.png'\r\nimport Avatar from '../assets.app/img/dashboard/doctor-3.jpg'\r\nimport Sidebar from \"./Sidebar\"\r\nimport { Dropdown, Item } from '../components/common-components/Dropdown';\r\nimport Appointment from \"../components/common-components/Appointment/Appointment\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faBell, faCalendarDays } from '@fortawesome/free-solid-svg-icons'\r\nimport useNotification from '../hooks/Notification';\r\nimport { Link } from \"react-router-dom\";\r\nimport { userRoutes } from \"../constants/constant\";\r\n\r\nconst Header = () => {\r\n    const notificationAPI = useNotification();\r\n    const userInfo = JSON.parse(localStorage.getItem('user'))\r\n    const [isModalOpen, setIsModalOpen] = useState(false)\r\n    const [notifications, setNotifications] = useState([])\r\n    const [unseenNotificationCount, setUnseenNotificationCount] = useState(0)\r\n    const mobileView = window.screen.availWidth <= 767\r\n    const [isSidebarOpen, setIsSidebarOpen] = useState(mobileView ? false : true)\r\n    const PRIORITY_COLORS = {\r\n        'low': 'success',\r\n        'medium': 'warning',\r\n        'high': 'danger',\r\n    }\r\n\r\n    const getUserPath = () =>  userRoutes[userInfo.userType]?.path\r\n\r\n    useEffect(() => {\r\n        getNotifications()\r\n        window.addEventListener('resize', () => {\r\n            const mobileView = window.screen.availWidth <= 767\r\n            setIsSidebarOpen(mobileView ? false : true)\r\n        })\r\n        return () => window.removeEventListener('resize', () => { }, false)\r\n    }, [])\r\n\r\n    const Logout = () => {\r\n        localStorage.clear()\r\n        window.location.replace('/login')\r\n    }\r\n\r\n    const getNotifications = async () => {\r\n        try { \r\n            let { data } = await notificationAPI.get()\r\n            setNotifications(data.notifications)\r\n            setUnseenNotificationCount(data?.unseenNotificationCount)\r\n        } catch(error){ console.log(error) }\r\n    }\r\n\r\n    const LockUser = () => {\r\n        let user = JSON.parse( localStorage.getItem('user'))\r\n        localStorage.clear()\r\n        localStorage.setItem('email', JSON.stringify(user.email))\r\n        window.location.replace('/login')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Sidebar isOpen={isSidebarOpen} setIsOpen={setIsSidebarOpen} mobileView={mobileView} />\r\n            <nav className=\"navbar ms-navbar\">\r\n                <div className=\"ms-aside-toggler ms-toggler ps-0\" data-bs-target=\"#ms-side-nav\" data-bs-toggle=\"slideLeft\">\r\n                    <span className=\"ms-toggler-bar bg-white\"></span>\r\n                    <span className=\"ms-toggler-bar bg-white\"></span>\r\n                    <span className=\"ms-toggler-bar bg-white\"></span>\r\n                </div>\r\n                <div className=\"docfind-logo\">\r\n                    <a className=\"sigma_logo\" href=\"/\">\r\n                        <img src={Logo} alt=\"logo\" />\r\n                    </a>\r\n                </div>\r\n\r\n                <ul className=\"ms-nav-list ms-inline mb-0\" id=\"ms-nav-options\">\r\n                    {userInfo.userType === \"DR\"  && <li className=\"ms-nav-item ms-d-none\">\r\n                        <div className=\"text-white cursor-pointer\" onClick={() => setIsModalOpen(true) }><FontAwesomeIcon className=\"Header-icon\" icon={faCalendarDays} />Make an appointment</div>\r\n                    </li>}\r\n                    \r\n                    <li className=\"ms-nav-item ms-d-none\">\r\n                        <div className=\"text-white\" >\r\n                        <Dropdown\r\n                            toggle={<> <FontAwesomeIcon className=\"Header-icon cursor-pointer\" icon={faBell} />{ unseenNotificationCount > 0 && <span class=\"badge rounded-pill badge-outline-light bell-badge \">{unseenNotificationCount}</span>} </>}\r\n                        >\r\n                            <li className=\"dropdown-menu-header\">\r\n                                <h6 className=\"dropdown-header ms-inline m-0\"><span className=\"text-disabled\">Notifications</span></h6>\r\n                            </li>\r\n                            <li className=\"dropdown-divider m-0 fs-12\"></li>\r\n                            {notifications.length ? \r\n                                notifications.map( notification => \r\n                                    <Item>\r\n                                        <div className=\"row cursor-pointer\">\r\n                                            <div className=\"col-2\">\r\n                                                <span class={`badge badge-gradient-${PRIORITY_COLORS[notification.priority]}`} style={{ fontSize:\"9px\"}}>{notification.priority}</span>\r\n                                            </div>\r\n                                            <div className=\"col-10\">\r\n                                                <span className=\"fs-12 mx-3\">{notification.title}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Item>\r\n                                ) : <Item><span>No Data</span></Item>\r\n\r\n                            }\r\n                            <li className=\"dropdown-divider m-0 fs-12\"></li>\r\n\r\n                            <Link to={`${getUserPath()}/notification`} className=\" dropdown-menu-header\">\r\n                                {/* <li className=\"\"> */}\r\n                                    <h6 className=\"dropdown-header ms-inline m-0 fs-12\"><span className=\"text-disabled\">View All </span></h6>\r\n                                {/* </li> */}\r\n                            </Link>\r\n    \r\n                        </Dropdown>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"ms-nav-item ms-nav-user dropdown\">\r\n                        <Dropdown\r\n                            toggle={<img className=\"ms-user-img ms-img-round float-end\" src={Avatar} alt=\"people\" />}\r\n                        >\r\n                            <li className=\"dropdown-menu-header\">\r\n                                <h6 className=\"dropdown-header ms-inline m-0\"><span className=\"text-disabled\">Welcome, Dr Samuel Deo</span></h6>\r\n                            </li>\r\n                            <li className=\"dropdown-divider\"></li>\r\n\r\n                            <Item onClick={() => LockUser()}><span className=\"fs-14 p-2\"><i className=\"flaticon-user me-2\"></i>Lock</span></Item>\r\n                            <Item onClick={() => Logout()}><span className=\"fs-14 p-2\"><i className=\"flaticon-user me-2\"></i> Logout</span></Item>\r\n                        </Dropdown>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"ms-toggler ms-d-block-sm pe-0 ms-nav-toggler\" onClick={() => setIsSidebarOpen((old) => !old)}>\r\n                    <span className=\"ms-toggler-bar bg-white\"></span>\r\n                    <span className=\"ms-toggler-bar bg-white\"></span>\r\n                    <span className=\"ms-toggler-bar bg-white\"></span>\r\n                </div>\r\n                {isModalOpen && \r\n                    <Appointment \r\n                        isOpen={isModalOpen}\r\n                        setIsOpen={setIsModalOpen}\r\n                    />\r\n                }\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\nexport default memo(Header);","import Header from \"./Header\";\r\nimport \"../assets.app/css/style.css\"\r\nimport \"../assets.app/css/custom.css\"\r\nimport { Outlet } from \"react-router-dom\";\r\nimport ClinicRegistartion from \"../components/user-component/ClinicRegistartion\";\r\n\r\nconst Layout = () => {\r\n    const userInfo = JSON.parse(localStorage.getItem('user'))\r\n    return (\r\n        <body className=\"ms-body ms-primary-theme ms-logged-out\">\r\n            <main className=\"body-content\">\r\n                <Header />\r\n                <div className='main-content'>\r\n                    <div id=\"main-content\" className=\"ml255 mt80 \" style={{ width: '100%',  }}>\r\n                       { userInfo?.twoFactor?.isVerified || ['SA', \"MR\",].includes(userInfo?.userType) || true ? <Outlet /> : <ClinicRegistartion source={'Clinic'} isSelfCreated={true} />}\r\n                    </div> \r\n                </div>\r\n            </main>\r\n        </body>\r\n    )\r\n}\r\n\r\nexport default Layout;"],"names":["Item","_ref","children","rest","_objectWithoutProperties","_excluded","_jsx","_objectSpread","class","Dropdown","_ref2","toggle","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","wrapperRef","useRef","handleOutside","event","current","contains","target","useEffect","window","addEventListener","removeEventListener","_Fragment","_jsxs","className","onClick","ref","concat","_userInfo$organizatio","_userInfo$organizatio2","_userInfo$organizatio3","mobileView","pathname","useLocation","split","userInfo","JSON","parse","localStorage","getItem","activeNav","setActiveNav","style","paddingBottom","href","src","Logo","alt","Doctor","includes","userType","fullName","organizationId","name","userRoutes","title","organizationType","toUpperCase","MODULES","m","access","map","module","key","id","Link","to","Header","notificationAPI","useNotification","isModalOpen","setIsModalOpen","_useState3","_useState4","notifications","setNotifications","_useState5","_useState6","unseenNotificationCount","setUnseenNotificationCount","screen","availWidth","_useState7","_useState8","isSidebarOpen","setIsSidebarOpen","PRIORITY_COLORS","getNotifications","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$notificationAP","data","wrap","_context","prev","next","get","sent","t0","console","log","stop","apply","arguments","Sidebar","FontAwesomeIcon","icon","faCalendarDays","faBell","length","notification","priority","fontSize","_userRoutes$userInfo$","path","getUserPath","Avatar","user","clear","setItem","stringify","email","location","replace","LockUser","old","Appointment","memo","_userInfo$twoFactor","width","twoFactor","isVerified","Outlet"],"sourceRoot":""}